/*i::
 * This build file was auto generated by running the Gradle 'init' task
 * by 'rkodekar' at '9/23/17 1:53 AM' with Gradle 2.10
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.10/userguide/tutorial_java_projects.html
 */

 buildscript {
    ext.kotlin_version = '1.1.50'
    ext.ktor_version = '0.4.0'

    repositories {
	    jcenter()
        mavenCentral()
        maven { url  "http://dl.bintray.com/kotlin/ktor" }
        maven { url "https://dl.bintray.com/kotlin/kotlinx" }

    }

    dependencies {
       classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'kotlin'
// In this section you declare where to find the dependencies of your project

sourceCompatibility = 1.8

sourceSets {
    main{
	  kotlin {
	    srcDir 'src'
	  }
	}

	test {
	  kotlin {
	    srcDir 'test'
	  }
	}
}
repositories {
   jcenter()
   mavenCentral()
   maven { url "https://dl.bintray.com/kotlin/kotlinx" }
   maven { url "https://dl.bintray.com/kotlin/ktor" }
}
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time 
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8"
    compile "org.jetbrains.ktor:ktor-core:$ktor_version"
    compile "org.jetbrains.ktor:ktor-netty:$ktor_version"


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:3.8.2'
}


compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

kotlin {
    experimental {
        coroutines "enable"
    }
}


jar {
   manifest {
         attributes 'Main-Class': 'Application'
   }
}
